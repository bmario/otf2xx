/*
 * Copyright 2013-2018, Technische Universitaet Dresden, Germany
 * All rights reserved.
 *
 * Use of this source code is governed by a BSD-style
 * license that can be found in the LICENSE file.
 */

#include <otf2xx/definition/deffwd.hpp>
#include <otf2xx/traits/reference.hpp>
#include <otf2xx/traits/traits.hpp>
#include <otf2xx/reference.hpp>

namespace otf2
{
namespace traits
{
    // Definitions
    @otf2 for def in defs|referable_defs|sort:
    @otf2  if def.lower == 'group':
    template <typename Def, otf2::common::group_type Type>
    struct reference<definition::@@def.lower@@<Def, Type>> : identity<otf2::@@def.ref_lower@@_ref>{};
    @otf2  else:
    template <>
    struct reference<definition::@@def.lower@@> : identity<otf2::@@def.ref_lower@@_ref>{};
    @otf2  endif
    @otf2 endfor

    // Virtual class definitions
    @otf2 for def in defs|referable_defs|shared_defs|first_born_defs|sort:
    template <>
    struct reference<definition::@@def.ref_lower@@> : identity<otf2::@@def.ref_lower@@_ref>{};
    @otf2 endfor

    //@ Not included in the template
    template <>
    struct reference<definition::marker> : identity<marker_ref>{};
} // namespace traits
} // namespace otf2
